#!/usr/bin/env bash

# Check if git is available
if ! command -v 'git' >/dev/null; then
  echo 'Ooops, git not found.'
  exit 1
fi

# Define repository variables
local_repo="${HOME}/.xcode-snippets"
remote_repo='https://github.com/adrfer/xcode-snippets.git'
local_snippets="${HOME}/Library/Developer/Xcode/UserData/CodeSnippets"

# Backup existing files, if any
if [[ -d "${local_snippets}" ]]; then
  echo -n "Backing up existing code snippets..."
  mv -f "${local_snippets%/}"{," copy $(date +%s)"}
  echo ' done.'
fi

# Update existing files or download new ones
if [[ -d "${local_repo}" ]]; then
  cd "${local_repo}"
  echo -n "Updating your arsenal of code snippets..."

  if git checkout . && git pull origin master >/dev/null 2>&1; then
    rm -rf "${local_snippets}"
    cp -r "${local_repo}/Snippets" "${local_snippets}"
    cd - >/dev/null
    echo ' done.'
  else
    echo
    echo "Ooops, unable to access ${remote_repo}, try again."
    exit 1
  fi
else
  echo -n "Downloading your arsenal of code snippets..."

  if git clone "${remote_repo}" "${local_repo}" >/dev/null 2>&1; then
    cp -r "${local_repo}/Snippets" "${local_snippets}"
    echo ' done.'
  else
    echo "Ooops, unable to access ${remote_repo}, try again."
    exit 1
  fi
fi

# Restart and/or open Xcode
if [[ $(pgrep -x '[xX]code') ]]; then
  read -r -p 'Xcode needs to be restarted now, ok (y/n [n])? '

  if [[ "${REPLY}" =~ ^[Yy]$ ]]; then
    osascript -e 'tell app "Xcode" to quit' >/dev/null 2>&1
  fi
fi

if [[ ! $(pgrep -x '[xX]code') ]]; then
  read -r -p 'Open Xcode now (y/n [n])? '

  if [[ "${REPLY}" =~ ^[Yy]$ ]]; then
    open -a Xcode
  fi
fi

echo 'All good, enjoy!'
exit 0
